{
  "comments": [
    {
      "key": {
        "uuid": "55fb21fc_0e370ab4",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-10-08T14:25:36Z",
      "side": 1,
      "message": "\"runtime\" is missing a type. It should be \"type: array\" correct?",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41f27c9f_b10c8e65",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 10
      },
      "writtenOn": "2019-10-08T16:14:49Z",
      "side": 1,
      "message": "I think that\u0027s correct.",
      "parentUuid": "55fb21fc_0e370ab4",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c7ef6c4_337b7878",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 210
      },
      "writtenOn": "2019-10-09T00:50:52Z",
      "side": 1,
      "message": "The schema that currently acumos-python-client using is schema-0.4.0 (you can find it in acumos-python-client/acumos/metadata.py). In schema-0.4.0 the \u0027runtime\u0027 is not an \u0027array\u0027 type. My code in acumos-python-client is based on schema-0.4.0 and I don\u0027t know why schema-0.5.0 is not used, that\u0027s why I didn\u0027t put \"type: array\" here.",
      "parentUuid": "41f27c9f_b10c8e65",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efcbbf8a_1f0fa532",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 183,
      "author": {
        "id": 10
      },
      "writtenOn": "2019-10-08T16:14:49Z",
      "side": 1,
      "message": "I know we use it almost as a synonym, but is conda a required field for a python dependency?",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "809e7b80_ad2d1857",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 183,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-10-08T19:11:07Z",
      "side": 1,
      "message": "I think it\u0027s required for the metadata to be considered well-formed, in the event that a downstream component is installing conda packages. E.g. you could get a KeyError or similar, or not if coding defensively.",
      "parentUuid": "efcbbf8a_1f0fa532",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62f1a772_56e76cef",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 298,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-10-08T14:25:36Z",
      "side": 1,
      "message": "Two comments:\n1. As-is, I believe we need \"type: string\" here, in addition to the \"enum\" field.\n\n2. Instead of a single string, should media_type by a list of strings? For example, a model method that consumes protobuf also consumes application/json, since there is a 1:1 mapping from protobuf to json.",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be92faa6_e9d2d952",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 298,
      "author": {
        "id": 10
      },
      "writtenOn": "2019-10-08T16:14:49Z",
      "side": 1,
      "message": "I don\u0027t know if you need the type argument; if so, other blocks (VoidFunction -\u003emedia_type,Definition-\u003eRuntime-\u003ename) are also missing this.",
      "parentUuid": "62f1a772_56e76cef",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc47470e_8041bbd0",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 298,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-10-08T19:11:07Z",
      "side": 1,
      "message": "I think enum without a type is for supporting heterogeneous types: https://json-schema.org/understanding-json-schema/reference/generic.html#enumerated-values\n\nSince in all cases the type is string, I think \"type: string\" is more correct / preferable here.\n\nNice catch, then the Runtime.name field should also be \"type: string\", as expected of a name.",
      "parentUuid": "be92faa6_e9d2d952",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f8c2f13_2bb2dd3b",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 298,
      "author": {
        "id": 210
      },
      "writtenOn": "2019-10-09T00:50:52Z",
      "side": 1,
      "message": "agreed. I will add \"type:string\".",
      "parentUuid": "cc47470e_8041bbd0",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68e3338d_8310edb9",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 298,
      "author": {
        "id": 210
      },
      "writtenOn": "2019-10-09T00:56:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f8c2f13_2bb2dd3b",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba25379a_78b519f7",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 326,
      "author": {
        "id": 16
      },
      "writtenOn": "2019-10-08T14:25:36Z",
      "side": 1,
      "message": "My media type comment above also applies here",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2641caf5_aed6b37a",
        "filename": "schema-0.6.0.json",
        "patchSetId": 5
      },
      "lineNbr": 326,
      "author": {
        "id": 210
      },
      "writtenOn": "2019-10-09T00:56:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba25379a_78b519f7",
      "revId": "15749da34efb5c385c6cfa4c3cee2cdd0f2fc1a5",
      "serverId": "655300a2-7a56-4504-9153-881edd907bea",
      "unresolved": false
    }
  ]
}